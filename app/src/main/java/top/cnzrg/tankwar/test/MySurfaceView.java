package top.cnzrg.tankwar.test;import android.content.Context;import android.graphics.Canvas;import android.graphics.Paint;import android.util.AttributeSet;import android.util.Log;import android.view.MotionEvent;import android.view.SurfaceHolder;import android.view.SurfaceView;public class MySurfaceView        extends SurfaceView        implements SurfaceHolder.Callback, Runnable {    private final int RockerCircleR = 100;    private final int RockerCircleX = 150;    private final int RockerCircleY = 500;    private final float SmallRockerCircleR = 50.0F;    private float SmallRockerCircleX = 150.0F;    private float SmallRockerCircleY = 500.0F;    private Canvas canvas;    private boolean flag;    private final Paint paint;    private final SurfaceHolder sfh;    private Thread th;    public MySurfaceView(Context paramContext) {        this(paramContext, null);    }    public MySurfaceView(Context paramContext, AttributeSet paramAttributeSet) {        this(paramContext, paramAttributeSet, 0);    }    public MySurfaceView(Context paramContext, AttributeSet paramAttributeSet, int paramInt) {        super(paramContext, paramAttributeSet, paramInt);        Log.v("Himi", "MySurfaceView");        setKeepScreenOn(true);        this.sfh = getHolder();        this.sfh.addCallback(this);        this.paint = new Paint();        this.paint.setAntiAlias(true);        setFocusable(true);        setFocusableInTouchMode(true);        setZOrderOnTop(true);        getHolder().setFormat(-3);    }    /* Error */    public void draw() {        // Byte code:        //   0: aload_0        //   1: aload_0        //   2: getfield 70	top/cnzrg/tankwar/MySurfaceView:sfh	Landroid/view/SurfaceHolder;        //   5: invokeinterface 106 1 0        //   10: putfield 108	top/cnzrg/tankwar/MySurfaceView:canvas	Landroid/graphics/Canvas;        //   13: aload_0        //   14: getfield 83	top/cnzrg/tankwar/MySurfaceView:paint	Landroid/graphics/Paint;        //   17: ldc 109        //   19: invokevirtual 112	android/graphics/Paint:setColor	(I)V        //   22: aload_0        //   23: getfield 108	top/cnzrg/tankwar/MySurfaceView:canvas	Landroid/graphics/Canvas;        //   26: aload_0        //   27: getfield 37	top/cnzrg/tankwar/MySurfaceView:RockerCircleX	I        //   30: i2f        //   31: aload_0        //   32: getfield 39	top/cnzrg/tankwar/MySurfaceView:RockerCircleY	I        //   35: i2f        //   36: aload_0        //   37: getfield 41	top/cnzrg/tankwar/MySurfaceView:RockerCircleR	I        //   40: i2f        //   41: aload_0        //   42: getfield 83	top/cnzrg/tankwar/MySurfaceView:paint	Landroid/graphics/Paint;        //   45: invokevirtual 118	android/graphics/Canvas:drawCircle	(FFFLandroid/graphics/Paint;)V        //   48: aload_0        //   49: getfield 83	top/cnzrg/tankwar/MySurfaceView:paint	Landroid/graphics/Paint;        //   52: ldc 119        //   54: invokevirtual 112	android/graphics/Paint:setColor	(I)V        //   57: aload_0        //   58: getfield 108	top/cnzrg/tankwar/MySurfaceView:canvas	Landroid/graphics/Canvas;        //   61: aload_0        //   62: getfield 44	top/cnzrg/tankwar/MySurfaceView:SmallRockerCircleX	F        //   65: aload_0        //   66: getfield 47	top/cnzrg/tankwar/MySurfaceView:SmallRockerCircleY	F        //   69: aload_0        //   70: getfield 50	top/cnzrg/tankwar/MySurfaceView:SmallRockerCircleR	F        //   73: aload_0        //   74: getfield 83	top/cnzrg/tankwar/MySurfaceView:paint	Landroid/graphics/Paint;        //   77: invokevirtual 118	android/graphics/Canvas:drawCircle	(FFFLandroid/graphics/Paint;)V        //   80: aload_0        //   81: getfield 108	top/cnzrg/tankwar/MySurfaceView:canvas	Landroid/graphics/Canvas;        //   84: ifnull +68 -> 152        //   87: aload_0        //   88: getfield 70	top/cnzrg/tankwar/MySurfaceView:sfh	Landroid/view/SurfaceHolder;        //   91: aload_0        //   92: getfield 108	top/cnzrg/tankwar/MySurfaceView:canvas	Landroid/graphics/Canvas;        //   95: invokeinterface 123 2 0        //   100: goto +52 -> 152        //   103: astore_3        //   104: aload_0        //   105: getfield 108	top/cnzrg/tankwar/MySurfaceView:canvas	Landroid/graphics/Canvas;        //   108: ifnull +16 -> 124        //   111: aload_0        //   112: getfield 70	top/cnzrg/tankwar/MySurfaceView:sfh	Landroid/view/SurfaceHolder;        //   115: aload_0        //   116: getfield 108	top/cnzrg/tankwar/MySurfaceView:canvas	Landroid/graphics/Canvas;        //   119: invokeinterface 123 2 0        //   124: goto +5 -> 129        //   127: astore 4        //   129: aload_3        //   130: athrow        //   131: astore_1        //   132: aload_0        //   133: getfield 108	top/cnzrg/tankwar/MySurfaceView:canvas	Landroid/graphics/Canvas;        //   136: ifnull +16 -> 152        //   139: aload_0        //   140: getfield 70	top/cnzrg/tankwar/MySurfaceView:sfh	Landroid/view/SurfaceHolder;        //   143: aload_0        //   144: getfield 108	top/cnzrg/tankwar/MySurfaceView:canvas	Landroid/graphics/Canvas;        //   147: invokeinterface 123 2 0        //   152: goto +4 -> 156        //   155: astore_2        //   156: return        // Local variable table:        //   start	length	slot	name	signature        //   0	157	0	this	MySurfaceView        //   131	1	1	localException1	Exception        //   155	1	2	localException2	Exception        //   103	27	3	localObject	java.lang.Object        //   127	1	4	localException3	Exception        // Exception table:        //   from	to	target	type        //   0	80	103	finally        //   104	124	127	java/lang/Exception        //   0	80	131	java/lang/Exception        //   80	100	155	java/lang/Exception        //   132	152	155	java/lang/Exception    }    public double getRad(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4) {        float f1 = paramFloat3 - paramFloat1;        float f2 = paramFloat2 - paramFloat4;        float f3 = (float) Math.acos(f1 / (float) Math.sqrt(Math.pow(f1, 2.0D) + Math.pow(f2, 2.0D)));        if (paramFloat4 < paramFloat2) {            f3 = -f3;        }        return f3;    }    public void getXY(float paramFloat1, float paramFloat2, float paramFloat3, double paramDouble) {        this.SmallRockerCircleX = (paramFloat1 + (float) (paramFloat3 * Math.cos(paramDouble)));        this.SmallRockerCircleY = (paramFloat2 + (float) (paramFloat3 * Math.sin(paramDouble)));    }    public boolean onTouchEvent(MotionEvent paramMotionEvent) {        if ((paramMotionEvent.getAction() != 0) && (paramMotionEvent.getAction() != 2)) {            if (paramMotionEvent.getAction() == 1) {                this.SmallRockerCircleX = 150.0F;                this.SmallRockerCircleY = 500.0F;            }        } else if (Math.sqrt(Math.pow(this.RockerCircleX - (int) paramMotionEvent.getX(), 2.0D) + Math.pow(this.RockerCircleY - (int) paramMotionEvent.getY(), 2.0D)) >= this.RockerCircleR) {            double d = getRad(this.RockerCircleX, this.RockerCircleY, paramMotionEvent.getX(), paramMotionEvent.getY());            getXY(this.RockerCircleX, this.RockerCircleY, this.RockerCircleR, d);        } else {            this.SmallRockerCircleX = ((int) paramMotionEvent.getX());            this.SmallRockerCircleY = ((int) paramMotionEvent.getY());        }        return true;    }    public void run() {        for (; ; ) {            if (this.flag) {                draw();                try {                    Thread.sleep(50L);                } catch (Exception localException) {                    label17:                    break label17;                }            }        }    }    public void surfaceChanged(SurfaceHolder paramSurfaceHolder, int paramInt1, int paramInt2, int paramInt3) {        Log.v("Himi", "surfaceChanged");    }    public void surfaceCreated(SurfaceHolder paramSurfaceHolder) {        this.th = new Thread(this);        this.flag = true;        this.th.start();    }    public void surfaceDestroyed(SurfaceHolder paramSurfaceHolder) {        this.flag = false;        Log.v("Himi", "surfaceDestroyed");    }}